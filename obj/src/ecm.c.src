	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_hexdump
_hexdump:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 9)
	ld	de, 0
BB0_1:
	or	a, a
	sbc	hl, de
	jr	z, BB0_5
	ld	hl, (ix + 6)
	add	hl, de
	ld	(ix - 3), de
	ld	de, 0
	ld	e, (hl)
	push	de
	ld	hl, _.str
	push	hl
	call	_printf
	ld	de, (ix - 3)
	pop	hl
	pop	hl
	ld	a, e
	and	a, 7
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB0_4
	or	a, a
	ld	hl, 10
	push	hl
	call	z, _putchar
	pop	hl
	ld	de, (ix - 3)
BB0_4:
	inc	de
	ld	hl, (ix + 9)
	jr	BB0_1
BB0_5:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_ecm_handle_usb_event
_ecm_handle_usb_event:
	ld	hl, -3
	call	__frameset
	ld	iy, (ix + 6)
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
	lea	bc, iy
	dec	bc
	ld	de, 8
	push	bc
	pop	hl
	sbc	hl, de
	jr	c, BB1_2
	ld	de, 35
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	z, BB1_3
	jr	BB1_8
BB1_2:
	ld	hl, JTI1_0
	add	hl, bc
	add	hl, bc
	add	hl, bc
	ld	hl, (hl)
	jp	(hl)
BB1_3:
	ld	hl, _str
	ld	de, 5
	ld	(ix - 3), de
	push	hl
	call	_puts
BB1_4:
	pop	hl
	jr	BB1_8
BB1_5:
	ld	hl, _str.10
	push	hl
	call	_puts
	pop	hl
	call	_usb_GetRole
	ld	a, l
	bit	4, a
	jr	nz, BB1_8
	ld	hl, (ix + 9)
	push	hl
	call	_usb_ResetDevice
	jr	BB1_4
BB1_7:
	ld	hl, _str.9
	push	hl
	call	_puts
	pop	hl
	ld	hl, (ix + 9)
	ld	(_ecm_device+1), hl
	call	_ecm_init
	ld	(ix - 3), hl
BB1_8:
	ld	hl, (ix - 3)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
	private	JTI1_0
JTI1_0:
	dl	BB1_3
	dl	BB1_5
	dl	BB1_3
	dl	BB1_7
	dl	BB1_8
	dl	BB1_8
	dl	BB1_8
	dl	BB1_3

	section	.text,"ax",@progbits
	public	_ecm_init
_ecm_init:
	ld	hl, -292
	call	__frameset
	ld	bc, -265
	lea	iy, ix
	add	iy, bc
	lea	hl, ix - 9
	push	ix
	ld	bc, -268
	add	ix, bc
	ld	(ix), iy
	pop	ix
	lea	de, iy
	ld	bc, (_ecm_device+1)
	ld	(ix - 3), bc
	ld	bc, -274
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	hl
	ld	hl, 18
	push	hl
	ld	bc, -271
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	push	de
	or	a, a
	sbc	hl, hl
	push	hl
	inc	hl
	push	hl
	ld	bc, (ix - 3)
	push	bc
	call	_usb_GetDescriptor
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB2_2
	ld	hl, (ix - 9)
	ld	de, 18
	or	a, a
	sbc	hl, de
	jr	z, BB2_4
BB2_2:
	ld	hl, 10
BB2_3:
	ld	sp, ix
	pop	ix
	ret
BB2_4:
	ld	bc, -268
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	a, (iy + 4)
	or	a, a
	jp	nz, BB2_51
	ld	hl, 5
	ld	e, (iy + 17)
	xor	a, a
	ld	c, a
BB2_6:
	ld	a, c
	cp	a, e
	jr	z, BB2_3
	ld	(ix - 3), bc
	ld	bc, -275
	lea	hl, ix
	add	hl, bc
	ld	(hl), e
	ld	hl, (_ecm_device+1)
	ld	bc, (ix - 3)
	push	bc
	push	hl
	ld	de, -268
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	call	_usb_GetConfigurationDescriptorTotalLength
	ld	de, -268
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	push	hl
	pop	iy
	pop	hl
	pop	hl
	lea	hl, iy
	ld	de, 257
	or	a, a
	sbc	hl, de
	jp	nc, BB2_50
	ld	hl, (_ecm_device+1)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -274
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	de
	push	iy
	push	ix
	ld	bc, -271
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	de
	ld	bc, (ix - 3)
	push	bc
	ld	de, 2
	push	de
	push	hl
	ld	bc, -278
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	call	_usb_GetDescriptor
	ld	de, -268
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	push	ix
	ld	de, -278
	add	ix, de
	ld	iy, (ix)
	pop	ix
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB2_50
	ld	hl, (ix - 9)
	lea	de, iy
	or	a, a
	sbc	hl, de
	jp	nz, BB2_50
	ld	hl, (_ecm_device+4)
	push	ix
	ld	bc, -289
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	hl, (_ecm_device+16)
	push	ix
	ld	bc, -292
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	a, (_ecm_device+22)
	ld	d, a
	ld	a, (_ecm_device+23)
	ld	bc, -286
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	ld	e, 0
	push	ix
	inc	bc
	add	ix, bc
	ld	(ix), e
	pop	ix
	push	ix
	ld	bc, -271
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	push	ix
	ld	bc, -281
	add	ix, bc
	ld	(ix), hl
	pop	ix
	or	a, a
	sbc	hl, hl
	lea	bc, iy
BB2_11:
	ld	(ix - 3), de
	ld	de, -284
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	or	a, a
	sbc	hl, bc
	ld	de, -268
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	bc, (hl)
	ld	de, (ix - 3)
	jp	nc, BB2_50
	ld	bc, -281
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	a, (iy + 1)
	cp	a, 4
	jp	nz, BB2_18
	ld	a, e
	cp	a, 2
	jp	nz, BB2_30
	ld	bc, -281
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	a, (iy + 2)
	push	ix
	ld	bc, -285
	add	ix, bc
	ld	l, (ix)
	pop	ix
	cp	a, l
	jp	nz, BB2_39
	ld	a, (iy + 4)
	cp	a, 2
	ld	bc, -284
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	hl, (hl)
	jp	nz, BB2_37
	ld	a, (iy + 5)
	cp	a, 10
	jp	nz, BB2_37
	ld	(_ecm_device+16), iy
	ld	bc, -278
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	a, d
	push	ix
	ld	bc, -284
	add	ix, bc
	ld	de, (ix)
	pop	ix
	or	a, a
	sbc	hl, de
	ld	d, a
	ld	(_ecm_device+19), hl
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -292
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	e, 3
	jp	BB2_49
BB2_18:
	cp	a, 5
	jp	nz, BB2_33
	ld	a, e
	cp	a, 3
	jp	nz, BB2_41
	ld	b, d
	ld	de, -281
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	ld	a, (iy + 2)
	cp	a, 0
	call	pe, __setflag
	ld	l, -1
	jp	p, BB2_22
	ld	l, 0
BB2_22:
	bit	0, l
	ld	de, 23
	jr	nz, BB2_24
	ld	de, 22
BB2_24:
	bit	0, l
	ld	c, a
	jr	nz, BB2_26
	ld	(ix - 3), de
	ld	de, -286
	lea	iy, ix
	add	iy, de
	ld	c, (iy)
	ld	de, (ix - 3)
BB2_26:
	bit	0, l
	jr	nz, BB2_28
	ld	b, a
BB2_28:
	ld	hl, _ecm_device
	add	hl, de
	ld	(hl), a
	ld	a, c
	or	a, a
	jp	nz, BB2_44
	xor	a, a
	ld	de, -286
	lea	hl, ix
	add	hl, de
	ld	(hl), a
	ld	e, 3
	ld	d, b
	jp	BB2_48
BB2_30:
	ld	hl, 0
	ld	(_ecm_device+10), hl
	ld	bc, -281
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	a, (iy + 5)
	cp	a, 2
	jp	nz, BB2_38
	ld	a, (iy + 6)
	cp	a, 6
	jp	nz, BB2_38
	ld	(_ecm_device+10), iy
	ld	bc, -278
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	a, d
	push	ix
	ld	bc, -284
	add	ix, bc
	ld	de, (ix)
	pop	ix
	or	a, a
	sbc	hl, de
	ld	d, a
	ld	(_ecm_device+13), hl
	ld	bc, -271
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(_ecm_device+4), hl
	ld	(ix - 3), de
	push	ix
	ld	de, -278
	add	ix, de
	ld	bc, (ix)
	pop	ix
	ld	(_ecm_device+7), bc
	push	ix
	ld	bc, -289
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -284
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, (ix - 3)
	jr	BB2_43
BB2_33:
	cp	a, 36
	ld	bc, -284
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	hl, (hl)
	jr	nz, BB2_42
	ld	a, e
	cp	a, 1
	ld	bc, -281
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	iy, (iy)
	jp	nz, BB2_49
	ld	a, (iy + 2)
	cp	a, 6
	jr	nz, BB2_43
	ld	a, (iy + 4)
	push	ix
	ld	bc, -285
	add	ix, bc
	ld	(ix), a
	pop	ix
BB2_37:
	ld	e, 2
	jp	BB2_49
BB2_38:
	ld	e, 0
	jr	BB2_40
BB2_39:
	ld	e, 2
BB2_40:
	ld	bc, -284
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	jp	BB2_49
BB2_41:
	ld	bc, -284
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
BB2_42:
	ld	bc, -281
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	jp	BB2_49
BB2_43:
	ld	e, 1
	jp	BB2_49
BB2_44:
	ld	d, b
	ld	a, d
	or	a, a
	jr	z, BB2_47
	ld	(ix - 3), bc
	ld	bc, -289
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	bc, (ix - 3)
	jr	z, BB2_47
	ld	(ix - 3), bc
	ld	bc, -292
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	bc, (ix - 3)
	jr	nz, BB2_52
BB2_47:
	ld	(ix - 3), de
	ld	de, -286
	lea	hl, ix
	add	hl, de
	ld	(hl), c
	ld	de, (ix - 3)
	ld	e, 3
BB2_48:
	ld	bc, -284
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	push	ix
	ld	bc, -281
	add	ix, bc
	ld	iy, (ix)
	pop	ix
BB2_49:
	ld	bc, 0
	ld	c, (iy)
	add	hl, bc
	add	iy, bc
	push	ix
	ld	bc, -281
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	(ix - 3), de
	ld	de, -278
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	ld	de, (ix - 3)
	jp	BB2_11
BB2_50:
	inc	c
	ld	hl, 5
	ld	(ix - 3), bc
	ld	bc, -275
	lea	iy, ix
	add	iy, bc
	ld	e, (iy)
	ld	bc, (ix - 3)
	jp	BB2_6
BB2_51:
	ld	hl, 7
	jp	BB2_3
BB2_52:
	ld	hl, (_ecm_device+1)
	ld	de, (_ecm_device+7)
	push	de
	ld	bc, -289
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	de
	push	hl
	call	_usb_SetConfiguration
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB2_2
	ld	hl, (_ecm_device+1)
	ld	de, (_ecm_device+16)
	ld	bc, (_ecm_device+19)
	push	bc
	push	de
	push	hl
	call	_usb_SetInterface
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	hl, 10
	jp	nz, BB2_3
	ld	hl, (_ecm_device+1)
	ld	a, (_ecm_device+22)
	ld	e, a
	push	de
	push	hl
	call	_usb_GetDeviceEndpoint
	pop	de
	pop	de
	ld	(_ecm_device+24), hl
	ld	hl, (_ecm_device+1)
	ld	a, (_ecm_device+23)
	ld	e, a
	push	de
	push	hl
	call	_usb_GetDeviceEndpoint
	pop	de
	pop	de
	ld	(_ecm_device+27), hl
	ld	a, 1
	ld	(_ecm_device), a
	or	a, a
	sbc	hl, hl
	jp	BB2_3
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_ecm_receive_callback
_ecm_receive_callback:
	call	__frameset0
	ld	a, (ix + 9)
	ld	hl, (ix + 12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB3_2
	ld	de, _.str.5
	push	hl
	push	de
	call	_printf
	ld	a, (ix + 9)
	pop	hl
	pop	hl
BB3_2:
	bit	1, a
	jr	nz, BB3_4
	ld	iy, 1518
	ld	bc, _ecm_receive_callback
	ld	de, 0
	ld	hl, (_ecm_device+24)
	push	de
	push	bc
	push	iy
	ld	de, _in_buf
	push	de
	push	hl
	call	_usb_ScheduleTransfer
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	jr	BB3_5
BB3_4:
	ld	hl, _str.11
	push	hl
	call	_puts
	ld	hl, 5
	pop	de
	ld	a, 1
	ld	(_transfer_fail), a
BB3_5:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_ecm_receive
_ecm_receive:
	ld	iy, 1518
	ld	bc, _ecm_receive_callback
	ld	de, 0
	ld	hl, (_ecm_device+24)
	push	de
	push	bc
	push	iy
	ld	de, _in_buf
	push	de
	push	hl
	call	_usb_ScheduleTransfer
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_ecm_transmit_callback
_ecm_transmit_callback:
	call	__frameset0
	ld	hl, (ix + 12)
	ld	de, _.str.7
	push	hl
	push	de
	call	_printf
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_ecm_transmit
_ecm_transmit:
	call	__frameset0
	ld	de, (ix + 6)
	ld	hl, _.str.8
	push	de
	push	hl
	call	_printf
	pop	hl
	pop	hl
	ld	hl, (_ecm_device+27)
	ld	de, 0
	push	de
	ld	de, _ecm_transmit_callback
	push	de
	ld	de, (ix + 9)
	push	de
	ld	de, (ix + 6)
	push	de
	push	hl
	call	_usb_ScheduleTransfer
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	public	_ecm_device
_ecm_device:
	rb	30

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"%02X", 0

	section	.bss,"aw",@nobits
	public	_transfer_fail
_transfer_fail:
	rb	1

	section	.rodata,"a",@progbits
	private	_.str.5
_.str.5:
	db	"%u bytes received!", 10, 0

	section	.bss,"aw",@nobits
	private	_in_buf
_in_buf:
	rb	1518

	section	.rodata,"a",@progbits
	private	_.str.7
_.str.7:
	db	"%u bytes sent", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.8
_.str.8:
	db	"sending: %s", 0

	section	.rodata,"a",@progbits
	private	_str
_str:
	db	"device lost", 0

	section	.rodata,"a",@progbits
	private	_str.9
_str.9:
	db	"device enabled", 0

	section	.rodata,"a",@progbits
	private	_str.10
_str.10:
	db	"device connected", 0

	section	.rodata,"a",@progbits
	private	_str.11
_str.11:
	db	"transfer error", 0

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 6c61664110f888c0285ae4c48b150c9a7a4361bb)"
	extern	_usb_GetDescriptor
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_usb_ResetDevice
	extern	_usb_GetConfigurationDescriptorTotalLength
	extern	_usb_SetInterface
	extern	_usb_GetDeviceEndpoint
	extern	_usb_ScheduleTransfer
	extern	_puts
	extern	_usb_SetConfiguration
	extern	_usb_GetRole
	extern	__setflag
	extern	__Unwind_SjLj_Unregister
	extern	_printf
	extern	_putchar
	extern	__frameset0
